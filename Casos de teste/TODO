Projeto-Compiladores:

  items-Obrigatórios :

    [X] Possuir 2 tipos de variáveis (pelo menos 1 deles String) // int e String (Float)
    [X] Possuir a instrução if-else
    [X] Pelo menos 1 estrutura de repetição ( while ou for ou do while )
    [+] Verificar atribuição de variáveis (erro semântico) - compatibilidade de tipos
    [X] Possui operações de Entrada e Saída // leitura de arquivos ?
    [X] Aceitar números decimais inteiros 
    [X] Verificar se variável foi ou não declarada
    [+] Verificar se variável declarada foi ou não utilizada
    [X] Linguagem Destino (C/Java/Python) //JAVA 
    
  entrega-Projeto:

    [] deadline 14/08/2021 (sábado) as 12h
    [] LInk para o repositório do GitHUB onde este projeto está armazenado
    [] Vídeo no youtube

  items-Opcionais:
    [+]  mais tipos de dados LOGIC VECTOR
    [+]  mais estruturas de repetições ( while do-while for )
    [+]  trabalhar com vetores/matrizes // declaração e na atribuição
    [-]  criar um runtime (um interpretador), além de gerar código destino
    [+]  outras opções a seu critério (especifique) 
    [+] implementar comentários no código, é bem simples a nível léxico 
  

  hoje : 
    [+] Arrumar as expr para logic types 
    [+] lações trabalhando com logic types 
    [+] arummar os erros e avisos 
    [-] BUG var block
    [+] tipo vetor, declaração, atribuição vetor, atribuição em indice

  amanha :
    [-] logic && (b< 10)  ??
  

    vector :
      [+] declaração regra -> [] tipo ID ;
      [+] atribuição total = ID = { vectorExpr }; 
      [+] atribuição parcial  ( só use number )
      [+] acessar valor pelo indice ( usando number e usando id ) 


      [] erros de tipo para vector  ID = 10; error ID = {} , error ID = {verdadeiro} , id[INDEX] = tipo inexperado;
    [] Rever as mensagems de erros


w  